<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zhcs.dao.BrknewsDao">

	<select id="queryObject" resultType="com.zhcs.entity.BrknewsEntity">
		select
			id, 		
			type, 		
			source, 		
			lat, 		
			lng, 		
			adds, 		
			content, 		
			img, 		
			caseno, 
			evaluate,		
			crtid, 		
			crttm, 		
			updid, 		
			updtm		
		from brknews where id = #{value}
	</select>

	<select id="queryObjectByNo" resultType="com.zhcs.entity.BrknewsEntity">
		select
			id, 		
			type, 		
			source, 		
			lat, 		
			lng, 		
			adds, 		
			content, 		
			img, 		
			caseno, 
			evaluate,		
			crtid, 		
			crttm, 		
			updid, 		
			updtm		
		from brknews where caseno = #{value}
	</select>

	<select id="queryList" resultType="com.zhcs.entity.BrknewsEntity">
		select
			id, 		
			type, 		
			source, 		
			lat, 		
			lng, 		
			adds, 		
			content, 		
			img, 		
			caseno, 
			evaluate,		
			crtid, 		
			crttm, 		
			updid, 		
			updtm		
		from brknews 
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order} 
			</when>
			<otherwise>
				order by updtm desc 
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryList2" resultType="java.util.Map">
		select
		id,
		type,
		source,
		lat,
		lng,
		adds,
		content,
		img,
		caseno,
		evaluate,
		crtid,
		crttm,
		updid,
		updtm
		from brknews
		<where>
			<if test="id != null ">
				and updid = id
			</if>
		</where>
		order by updtm desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryListByPerson" resultType="com.zhcs.entity.BrknewsEntity">
		select
			id, 		
			type, 		
			source, 		
			lat, 		
			lng, 		
			adds, 		
			content, 		
			img, 		
			caseno, 
			evaluate,		
			crtid, 		
			crttm, 		
			updid, 		
			updtm		
		from brknews 
		where crtid = #{person}
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order} 
			</when>
			<otherwise>
				order by updtm desc 
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryCountByPerson" resultType="java.lang.Integer">
		select count(*)		
		from brknews 
		where crtid = #{person}
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from brknews
		<where>
			<if test="id != null">
				and updid = id
			</if>
		</where>
	</select>
	 
	<insert id="save" parameterType="com.zhcs.entity.BrknewsEntity" useGeneratedKeys="true" keyProperty="id">
		insert into brknews
		(
			`type`, 
			`source`, 
			`lat`, 
			`lng`, 
			`adds`, 
			`content`, 
			`img`, 
			`caseno`, 
			`evaluate`, 
			`crtid`, 
			`crttm`, 
			`updid`, 
			`updtm`
		)
		values
		(
			#{type}, 
			#{source}, 
			#{lat}, 
			#{lng}, 
			#{adds}, 
			#{content}, 
			#{img}, 
			#{caseno}, 
			#{evaluate}, 
			#{crtid}, 
			#{crttm}, 
			#{updid}, 
			#{updtm}
		)
	</insert>
	 
	<update id="update" parameterType="com.zhcs.entity.BrknewsEntity">
		update brknews 
		<set>
			<if test="type != null">`type` = #{type}, </if>
			<if test="source != null">`source` = #{source}, </if>
			<if test="lat != null">`lat` = #{lat}, </if>
			<if test="lng != null">`lng` = #{lng}, </if>
			<if test="adds != null">`adds` = #{adds}, </if>
			<if test="content != null">`content` = #{content}, </if>
			<if test="img != null">`img` = #{img}, </if>
			<if test="caseno != null">`caseno` = #{caseno}, </if>
			<if test="evaluate != null">`evaluate` = #{evaluate}, </if>
			<if test="crtid != null">`crtid` = #{crtid}, </if>
			<if test="crttm != null">`crttm` = #{crttm}, </if>
			<if test="updid != null">`updid` = #{updid}, </if>
			<if test="updtm != null">`updtm` = #{updtm}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from brknews where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from brknews where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>